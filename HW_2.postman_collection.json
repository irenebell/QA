{
	"info": {
		"_postman_id": "8528b46d-2648-4746-997c-4284d44aeaf4",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!ss\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5007/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5007",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"check_name\", function () {    \r",
							"    pm.expect(jsonData.name).to.eql('Carol');\r",
							"});\r",
							"\r",
							"pm.test(\"check_age\", function () {    \r",
							"    pm.expect(jsonData.age).to.eql('30');\r",
							"});\r",
							"\r",
							"pm.test(\"check_salary\", function () {    \r",
							"    pm.expect(jsonData.salary).to.eql(2000);\r",
							"});\r",
							"\r",
							"let req = request.data;\r",
							"\r",
							"let name = jsonData.name;\r",
							"let check_name = req.name;\r",
							"\r",
							"let age = jsonData.age;\r",
							"let check_age = req.age;\r",
							"\r",
							"let salary = jsonData.salary;\r",
							"let check_salary = Number(req.salary);\r",
							"\r",
							"\r",
							"pm.test(\"check_name_response\", function () {    \r",
							"    pm.expect(name).to.eql(check_name);\r",
							"});\r",
							"\r",
							"pm.test(\"check_age_response\", function () {    \r",
							"    pm.expect(age).to.eql(check_age);\r",
							"});\r",
							"\r",
							"pm.test(\"check_salary_response\", function () {    \r",
							"    pm.expect(salary).to.eql(check_salary);\r",
							"});\r",
							"\r",
							"console.log(jsonData.family)\r",
							"\r",
							"let u_salary_1_5_year = jsonData.family.u_salary_1_5_year;\r",
							"let check_u_salary_1_5_year = req.salary * 4;\r",
							"\r",
							"\r",
							"pm.test('check_u_salary_1_5_year', function () {    \r",
							"    pm.expect(u_salary_1_5_year).to.eql(check_u_salary_1_5_year);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Carol",
							"type": "text"
						},
						{
							"key": "age",
							"value": "30",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "2000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5007/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5007",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let req = request.data;\r",
							"let jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Is_start_qa_salary\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"pm.test(\"Is_qa_salary_after_6_months\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"Is_qa_salary_after_12_months\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"Is_qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"pm.test(\"Is_qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"pm.test(\"Is_person\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"person\");\r",
							"});\r",
							"\r",
							"let salary = jsonData.start_qa_salary;\r",
							"let check_salary = Number(req.salary);\r",
							"\r",
							"\r",
							"pm.test(\"check_salary_response\", function () {    \r",
							"    pm.expect(salary).to.eql(check_salary);\r",
							"});\r",
							"\r",
							"pm.test(\"check_salary_after_6_months\", function () {    \r",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.eql(check_salary * 2);\r",
							"});\r",
							"\r",
							"pm.test(\"check_salary_after_12_months\", function () {    \r",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.eql(check_salary * 2.7);\r",
							"});\r",
							"\r",
							"pm.test(\"check_salary_after_1.5_year\", function () {    \r",
							"    pm.expect(jsonData['qa_salary_after_1.5_year']).to.eql(check_salary * 3.3);\r",
							"});\r",
							"\r",
							"pm.test(\"check_salary_after_3.5_years\", function () {    \r",
							"    pm.expect(jsonData['qa_salary_after_3.5_years']).to.eql(check_salary * 3.8);\r",
							"});\r",
							"\r",
							"pm.test(\"check_person_salary\", function () {    \r",
							"    pm.expect(jsonData.person.u_name[1]).to.eql(check_salary);\r",
							"});\r",
							"\r",
							"pm.test(\"check_person_age\", function () {    \r",
							"    pm.expect(jsonData.person.u_age).to.eql(Number(req.age));\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"check_salary_after_5_year\", function () {    \r",
							"    pm.expect(jsonData.person.u_salary_5_years).to.eql(check_salary * 4.2);\r",
							"});\r",
							"\r",
							"\r",
							"let person = jsonData.person\r",
							"\r",
							"for (let i in person) {\r",
							"    console.log(person[i])\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5007/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5007",
					"path": [
						"user_info_2"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"let req = pm.request.toJSON().url.query;\r",
							"\r",
							"\r",
							"let name = jsonData.name\r",
							"let check_name = req[0].value\r",
							"\r",
							"let age = jsonData.age\r",
							"let check_age = req[1].value\r",
							"\r",
							"let salary = jsonData.salary\r",
							"let check_salary = Number(req[2].value)\r",
							"\r",
							"\r",
							"pm.test(\"check_name\", function () {    \r",
							"    pm.expect(name).to.eql(check_name);\r",
							"});\r",
							"\r",
							"pm.test(\"check_age\", function () {    \r",
							"    pm.expect(age).to.eql(check_age);\r",
							"});\r",
							"\r",
							"pm.test(\"check_salary\", function () {    \r",
							"    pm.expect(salary).to.eql(check_salary);\r",
							"});\r",
							"\r",
							"console.log(jsonData.family)\r",
							"\r",
							"let dog = jsonData.family.pets.dog;\r",
							"let dog_name = jsonData.family.pets.dog.name\r",
							"let dog_age = jsonData.family.pets.dog.age\r",
							"\r",
							"pm.test(\"Is_dog_name\", function () {\r",
							"    pm.expect(dog).to.have.property(\"name\");\r",
							"});\r",
							"\r",
							"pm.test(\"Is_dog_age\",function () {\r",
							"  pm.expect(dog).to.have.property(\"age\");\r",
							"});\r",
							"\r",
							"pm.test(\"check_dog_name\", function () {    \r",
							"    pm.expect(dog_name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"pm.test(\"check_dog_age\", function () {    \r",
							"    pm.expect(dog_age).to.eql(4);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Sam",
							"type": "text",
							"disabled": true
						},
						{
							"key": "age",
							"value": "35",
							"type": "text",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "3000",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5007/object_info_3?name=Rey&age=35&salary=3000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5007",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Rey"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "3000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"let req = pm.request.toJSON().url.query;\r",
							"\r",
							"\r",
							"let name = jsonData.name\r",
							"let check_name = req[0].value\r",
							"\r",
							"let age = jsonData.age\r",
							"let check_age = Number(req[1].value)\r",
							"\r",
							"pm.test(\"check_name\", function () {    \r",
							"    pm.expect(name).to.eql(check_name);\r",
							"});\r",
							"\r",
							"pm.test(\"check_age\", function () {    \r",
							"    pm.expect(age).to.eql(check_age);\r",
							"});\r",
							"\r",
							"let salary = jsonData.salary\r",
							"let check_salary = Number(req[2].value)\r",
							"\r",
							"console.log(check_salary)\r",
							"console.log(salary)\r",
							"console.log(salary[0])\r",
							"console.log(salary[1])\r",
							"console.log(salary[2])\r",
							"\r",
							"pm.test(\"check_salary[0]\", function () {    \r",
							"    pm.expect(salary[0]).to.eql(check_salary);\r",
							"});\r",
							"\r",
							"pm.test(\"check_salary[1]\", function () {    \r",
							"    pm.expect(Number(salary[1])).to.eql(check_salary * 2);\r",
							"});\r",
							"\r",
							"pm.test(\"check_salary[2]\", function () {    \r",
							"    pm.expect(Number(salary[2])).to.eql(check_salary * 3);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\", name)\r",
							"pm.environment.set(\"age\", age)\r",
							"pm.environment.set(\"salary\", salary[0])\r",
							"\r",
							"\r",
							"for (let i = 0; i < salary.length; i++) {\r",
							"    console.log(salary[i])\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Sam",
							"type": "text",
							"disabled": true
						},
						{
							"key": "age",
							"value": "35",
							"type": "text",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "3000",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5007/object_info_4?name=Rey&age=35&salary=3000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5007",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Rey"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "3000"
						}
					]
				}
			},
			"response": []
		}
	]
}